topic "Primitive Data Types";
[2 $$0,0#00000000000000000000000000000000:Default]
[i448;a25;kKO9;2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,2#27521748481378242620020725143825:desc]
[0 $$3,0#96390100711032703541132217272105:end]
[H6;0 $$4,0#05600065144404261032431302351956:begin]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[l288;a4;*@5;1 $$6,6#70004532496200323422659154056402:requirement]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[i448;b42;O9;2 $$8,8#61672508125594000341940100500538:tparam]
[b42;2 $$9,9#13035079074754324216151401829390:normal]
[{_} 
[ {{10000@(113.42.0) [s0;%% [*@7;4 Primitive Data Types]]}}&]
[s4; &]
[s0; U`+`+ Core defines several primitive data types. Below is the 
complete list along with a brief description.&]
[s1;O_; &]
[s5;:Upp`:`:byte`:`:typedef: [* byte]&]
[s2;%% The [/ byte ]is a 8`-bit (byte) unsigned integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:int8`:`:typedef: [* int8]&]
[s2;%% The [/ int8 ]is a 8`-bit signed integer.&]
[s3;%% &]
[s4; &]
[s5;:Upp`:`:uint8`:`:typedef: [* uint8]&]
[s2;%% The [/ int8 ]is a 8`-bit unsigned integer.&]
[s0; &]
[s4; &]
[s5;:Upp`:`:word`:`:typedef: [* word]&]
[s2;%% The [/ word ]is a 16`-bit unsigned integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:int16`:`:typedef: [* int16]&]
[s2;%% The [/ int16 ]is a 16`-bit signed integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:uint16`:`:typedef: [* uint16]&]
[s2;%% The [/ uint16] is a 16`-bit unsigned integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:dword`:`:typedef: [* dword]&]
[s2;%% The [/ dword ](double word)[/  ]is a 32`-bit unsigned integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:int32`:`:typedef: [* int32]&]
[s2;%% The [/ int32] is a 32`-bit signed integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:uint32`:`:typedef: [* uint32]&]
[s2;%% The [/ uint32] is a 32`-bit unsigned integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:wchar`:`:typedef: [* wchar]&]
[s2;%% Wide character.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:int64`:`:typedef: [* int64]&]
[s2;%% The [/ int64] is a 64`-bit signed integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:uint64`:`:typedef: [* uint64]&]
[s2;%% The [/ uint64] is a 64`-bit unsigned integer.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:qword`:`:typedef: [* qword]&]
[s2;%% The [/ qword ](quad word) is a 64`-bit unsigned integer.&]
[s3; &]
[s0;%% ]]